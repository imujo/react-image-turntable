{"version":3,"sources":["../src/ReactImageTurntable.tsx","../src/useReactImageTurntable.ts"],"sourcesContent":["import { type CSSProperties, type MouseEvent, forwardRef } from 'react';\n\nimport type { ReactImageTurntableProps } from './types';\n\n/** Base `className` for images. */\nexport const CLASS_NAME_IMG = '__react-image-turntable-img';\n/** `className` of first rendered image (sets the size of the main component). */\nexport const CLASS_NAME_IMG_PRIMARY = `${CLASS_NAME_IMG}--primary`;\n/** `className` of subsequent images. */\nexport const CLASS_NAME_IMG_SECONDARY = `${CLASS_NAME_IMG}--secondary`;\n\n/**\n * Firefox desktop tries to drag the image on `pointerdown` + `pointermove` so we need to prevent it.\n */\nconst handleImgDragStart = (ev: MouseEvent<HTMLImageElement>) => {\n  ev.preventDefault();\n};\n\nexport const ReactImageTurntable = forwardRef<HTMLDivElement, ReactImageTurntableProps>(\n  (\n    {\n      activeImageIndex,\n      images,\n      style,\n      tabIndex = 0,\n      setActiveImageIndex: __setActiveImageIndex,\n      ...props\n    },\n    ref,\n  ) => {\n    const rootStyle: CSSProperties = {\n      position: 'relative',\n      touchAction: 'pan-y',\n      userSelect: 'none',\n      ...style,\n    };\n\n    return (\n      <div\n        aria-label=\"Image turntable\"\n        {...props}\n        ref={ref}\n        role=\"slider\"\n        aria-valuemin={1}\n        aria-valuemax={images.length}\n        aria-valuenow={activeImageIndex + 1}\n        aria-valuetext={`${activeImageIndex + 1} of ${images.length}`}\n        style={rootStyle}\n        tabIndex={tabIndex}\n      >\n        {images.map((src, index) => (\n          <img\n            key={src}\n            className={`${CLASS_NAME_IMG} ${\n              index === 0 ? CLASS_NAME_IMG_PRIMARY : CLASS_NAME_IMG_SECONDARY\n            }`}\n            src={src}\n            alt={`Turntable ${index + 1} of ${images.length + 1}`}\n            draggable={false}\n            onDragStart={handleImgDragStart}\n            style={{\n              position: index === 0 ? undefined : 'absolute',\n              opacity: index === activeImageIndex ? 1 : 0,\n              pointerEvents: index === activeImageIndex ? undefined : 'none',\n              left: 0,\n              top: 0,\n              right: 0,\n              bottom: 0,\n              width: '100%',\n              maxWidth: '100%',\n              height: '100%',\n              objectFit: 'cover',\n            }}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\nReactImageTurntable.displayName = 'ReactImageTurntable';\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport type { UseReactImageTurntableProps, UseReactImageTurntableReturn } from './types.js';\n\nconst defaultAutoRotate = {};\n\nexport const useReactImageTurntable = ({\n  initialImageIndex = 0,\n  autoRotate = defaultAutoRotate,\n  images,\n  movementSensitivity = 20,\n  onIndexChange,\n  setActiveImageIndex,\n  activeImageIndex,\n}: UseReactImageTurntableProps): UseReactImageTurntableReturn => {\n  const imagesCount = images.length - 1;\n  const { interval: autoRotateInterval = 200, enabled: autoRotateIsEnabled = false } = autoRotate;\n  const [activeImageIndexUnsafe, setActiveImageIndexUnsafe] = useState(initialImageIndex);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const turntableRef = useRef<HTMLDivElement>(null);\n\n  const setActiveImageIndexInternal = useCallback(\n    setActiveImageIndex ?? setActiveImageIndexUnsafe,\n    [],\n  );\n\n  const activeImageIndexInternal = useMemo(() => {\n    return activeImageIndex ?? activeImageIndexUnsafe;\n  }, [activeImageIndexUnsafe, activeImageIndex]);\n\n  /**\n   * Safely set the image index with fallback to 0 if the index is out of bounds.\n   */\n  const setActiveImageIndexSafe = useCallback(\n    (index: number) => {\n      const nextIndex = index > imagesCount ? 0 : index < 0 ? imagesCount : index;\n      setActiveImageIndexInternal(nextIndex);\n    },\n    [imagesCount, setActiveImageIndexInternal],\n  );\n\n  // Handle image count changes.\n  useEffect(() => {\n    if (activeImageIndexInternal > imagesCount) setActiveImageIndexInternal(0);\n  }, [activeImageIndexInternal, imagesCount, setActiveImageIndexInternal]);\n\n  // Handle `onIndexChange` callback.\n  useEffect(() => {\n    if (onIndexChange) onIndexChange(activeImageIndexInternal);\n  }, [activeImageIndexInternal, onIndexChange]);\n\n  // Control autorotation.\n  useEffect(() => {\n    const clearAutoRotateInterval = () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n\n    if (autoRotateIsEnabled && !intervalRef.current) {\n      intervalRef.current = setInterval(() => {\n        setActiveImageIndexInternal((prevIndex) => {\n          const nextIndex = prevIndex + 1;\n          return nextIndex > imagesCount ? 0 : nextIndex;\n        });\n      }, autoRotateInterval);\n    }\n\n    if (!autoRotateIsEnabled) {\n      clearAutoRotateInterval();\n    }\n\n    return () => clearAutoRotateInterval();\n  }, [autoRotateInterval, autoRotateIsEnabled, imagesCount, setActiveImageIndexInternal]);\n\n  // Event bindings.\n  useEffect(() => {\n    const target = turntableRef.current as HTMLDivElement;\n    let prevDragPosition = 0;\n\n    const incrementActiveIndex = () => {\n      setActiveImageIndexInternal((prev) => {\n        const next = prev + 1 > imagesCount ? 0 : prev + 1;\n        return next;\n      });\n    };\n\n    const decrementActiveIndex = () => {\n      setActiveImageIndexInternal((prev) => {\n        const next = prev - 1 < 0 ? imagesCount : prev - 1;\n        return next;\n      });\n    };\n\n    const handleKeyDown = (ev: KeyboardEvent) => {\n      if (ev.key === 'ArrowLeft') {\n        decrementActiveIndex();\n      } else if (ev.key === 'ArrowRight') {\n        incrementActiveIndex();\n      }\n    };\n\n    const handlePointerMove = (ev: PointerEvent) => {\n      const distanceDragged = prevDragPosition - ev.clientX;\n\n      if (distanceDragged <= -movementSensitivity) {\n        prevDragPosition = prevDragPosition + movementSensitivity;\n        incrementActiveIndex();\n      }\n\n      if (distanceDragged >= movementSensitivity) {\n        prevDragPosition = prevDragPosition - movementSensitivity;\n        decrementActiveIndex();\n      }\n    };\n\n    const handlePointerUp = () => {\n      window.removeEventListener('pointermove', handlePointerMove);\n      window.removeEventListener('pointerup', handlePointerUp);\n    };\n\n    const handlePointerDown = (ev: PointerEvent) => {\n      if (ev.button === 2) {\n        return;\n      }\n\n      prevDragPosition = ev.clientX;\n      window.addEventListener('pointermove', handlePointerMove, { passive: true });\n      window.addEventListener('pointerup', handlePointerUp, { passive: true });\n    };\n\n    target.addEventListener('keydown', handleKeyDown, { capture: true });\n    target.addEventListener('pointerdown', handlePointerDown, { capture: true });\n\n    return () => {\n      target.removeEventListener('keydown', handleKeyDown, { capture: true });\n      target.removeEventListener('pointerdown', handlePointerDown, { capture: true });\n      window.removeEventListener('pointerup', handlePointerUp);\n      window.removeEventListener('pointermove', handlePointerMove);\n    };\n  }, [imagesCount, movementSensitivity, setActiveImageIndexInternal]);\n\n  return {\n    activeImageIndex: activeImageIndexInternal,\n    setActiveImageIndex: setActiveImageIndexSafe,\n    images,\n    ref: turntableRef,\n  };\n};\n"],"mappings":"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","names":["forwardRef","jsx","CLASS_NAME_IMG","CLASS_NAME_IMG_PRIMARY","CLASS_NAME_IMG_SECONDARY","handleImgDragStart","ev","ReactImageTurntable","activeImageIndex","images","style","tabIndex","__setActiveImageIndex","props","ref","rootStyle","src","index","useCallback","useEffect","useMemo","useRef","useState","defaultAutoRotate","useReactImageTurntable","initialImageIndex","autoRotate","images","movementSensitivity","onIndexChange","setActiveImageIndex","activeImageIndex","imagesCount","autoRotateInterval","autoRotateIsEnabled","activeImageIndexUnsafe","setActiveImageIndexUnsafe","intervalRef","turntableRef","setActiveImageIndexInternal","activeImageIndexInternal","setActiveImageIndexSafe","index","nextIndex","clearAutoRotateInterval","prevIndex","target","prevDragPosition","incrementActiveIndex","prev","decrementActiveIndex","handleKeyDown","ev","handlePointerMove","distanceDragged","handlePointerUp","handlePointerDown"]}