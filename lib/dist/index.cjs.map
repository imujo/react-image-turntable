{"version":3,"sources":["/private/var/www/react-image-turntable/lib/dist/index.cjs","../src/ReactImageTurntable.tsx"],"names":["CLASS_NAME_IMG","CLASS_NAME_IMG_PRIMARY"],"mappings":"AAAA;ACAA,8BAAgE,+CAmDtD,IA9CGA,CAAAA,CAAiB,6BAAA,CAEjBC,CAAAA,kCAAyB,CAAA,EAAA","file":"/private/var/www/react-image-turntable/lib/dist/index.cjs","sourcesContent":[null,"import { type CSSProperties, type MouseEvent, forwardRef } from 'react';\n\nimport type { ReactImageTurntableProps } from './types';\n\n/** Base `className` for images. */\nexport const CLASS_NAME_IMG = '__react-image-turntable-img';\n/** `className` of first rendered image (sets the size of the main component). */\nexport const CLASS_NAME_IMG_PRIMARY = `${CLASS_NAME_IMG}--primary`;\n/** `className` of subsequent images. */\nexport const CLASS_NAME_IMG_SECONDARY = `${CLASS_NAME_IMG}--secondary`;\n\n/**\n * Firefox desktop tries to drag the image on `pointerdown` + `pointermove` so we need to prevent it.\n */\nconst handleImgDragStart = (ev: MouseEvent<HTMLImageElement>) => {\n  ev.preventDefault();\n};\n\nexport const ReactImageTurntable = forwardRef<HTMLDivElement, ReactImageTurntableProps>(\n  (\n    {\n      activeImageIndex,\n      images,\n      style,\n      tabIndex = 0,\n      setActiveImageIndex: __setActiveImageIndex,\n      ...props\n    },\n    ref,\n  ) => {\n    const rootStyle: CSSProperties = {\n      position: 'relative',\n      touchAction: 'pan-y',\n      userSelect: 'none',\n      ...style,\n    };\n\n    return (\n      <div\n        aria-label=\"Image turntable\"\n        {...props}\n        ref={ref}\n        role=\"slider\"\n        aria-valuemin={1}\n        aria-valuemax={images.length}\n        aria-valuenow={activeImageIndex + 1}\n        aria-valuetext={`${activeImageIndex + 1} of ${images.length}`}\n        style={rootStyle}\n        tabIndex={tabIndex}\n      >\n        {images.map((src, index) => (\n          <img\n            key={src}\n            className={`${CLASS_NAME_IMG} ${\n              index === 0 ? CLASS_NAME_IMG_PRIMARY : CLASS_NAME_IMG_SECONDARY\n            }`}\n            src={src}\n            alt={`Turntable ${index + 1} of ${images.length + 1}`}\n            draggable={false}\n            onDragStart={handleImgDragStart}\n            style={{\n              position: index === 0 ? undefined : 'absolute',\n              opacity: index === activeImageIndex ? 1 : 0,\n              pointerEvents: index === activeImageIndex ? undefined : 'none',\n              left: 0,\n              top: 0,\n              right: 0,\n              bottom: 0,\n              width: '100%',\n              maxWidth: '100%',\n              height: '100%',\n              objectFit: 'cover',\n            }}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\nReactImageTurntable.displayName = 'ReactImageTurntable';\n"]}